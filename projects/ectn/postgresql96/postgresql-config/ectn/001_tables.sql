-- Table: application_parameters

CREATE TABLE APPLICATION_PARAMETERS
(
  CODE      VARCHAR(50) NOT NULL,
  COMMENTS  VARCHAR(255),
  VALUE     VARCHAR(255),
  CONSTRAINT PK_APPLICATION_PARAMETERS PRIMARY KEY (CODE)
);

-- Table: add_supplychain_actors

CREATE TABLE add_supplychain_actors
(
  actor_sid bigint NOT NULL,
  eori VARCHAR(255),
  role VARCHAR(255),
  address VARCHAR(200),
  postcode VARCHAR(200),
  city VARCHAR(200),
  phone VARCHAR(200),
  fax VARCHAR(200),
  email VARCHAR(200),
  country_code VARCHAR(2),
  actor_name VARCHAR(500),
  CONSTRAINT add_supplychain_actors_pkey PRIMARY KEY (actor_sid)
);

CREATE TABLE CALL_PURPOSES
(
  CODE         bigint NOT NULL,
  DESCRIPTION  VARCHAR(256),
  TEXT         VARCHAR(256),
  CONSTRAINT PK_CALL_PURPOSES PRIMARY KEY (CODE)
);


CREATE TABLE CREW_DUTIES
(
  CODE         VARCHAR(21) NOT NULL,
  DESCRIPTION  VARCHAR(50),
  CONSTRAINT PK_CREW_DUTIES PRIMARY KEY (CODE)
);


CREATE TABLE MNG_AREAS
(
  CODE          VARCHAR(36) NOT NULL,
  NAME          VARCHAR(50),
  COUNTRY_CODE  VARCHAR(2)  DEFAULT 'XX' NOT NULL,
  CONSTRAINT PK_MNG_AREAS PRIMARY KEY (CODE)
);

CREATE TABLE MNG_ATTACHMENT_TYPES
(
  SID         bigint NOT NULL,
  TYPE_NAME   VARCHAR(80) NOT NULL,
  GROUP_NAME  VARCHAR(80) NOT NULL,
  CONSTRAINT MNG_ATTACHMENT_TYPES_PK PRIMARY KEY (SID),
  CONSTRAINT MNG_ATTACHMENT_TYPES_UK1 UNIQUE (TYPE_NAME)
);

CREATE TABLE MNG_COUNTRIES
(
  COUNTRY_CODE       VARCHAR(2) NOT NULL,
  COUNTRY_NAME       VARCHAR(255),
  COUNTRY_CODE_ISO3  VARCHAR(3),
  CONSTRAINT PK_MNG_COUNTRIES PRIMARY KEY (COUNTRY_CODE)  
);

CREATE TABLE MNG_EPC_MSG_CONTENTS
(
  SID                bigint NOT NULL,
  IMP_CODE           text,
  IMP_NAME           VARCHAR(255),
  IMP_DEFINITION     text,
  IMP_OCC            VARCHAR(20),
  DATATYPE           VARCHAR(20),
  IMP_GROUP          text,
  SUPPORTED          boolean,
  MANDATORY          boolean,
  ARRIVAL_DEPARTURE  VARCHAR(10) NOT NULL,
  CONSTRAINT PK_MNG_EPC_MSG_CONTENTS PRIMARY KEY(SID),  
  CONSTRAINT MNG_EPC_MSG_CONTENTS_UK UNIQUE (IMP_CODE)
);

CREATE TABLE mng_formalities
(
  formality_name VARCHAR(255) NOT NULL,
  CONSTRAINT mng_formalities_pkey PRIMARY KEY (formality_name)
);

CREATE TABLE MNG_FORMALITIES_GROUPS
(
  FORMALITY_NAME  VARCHAR(80),
  GROUP_NAME      VARCHAR(80),
  CONSTRAINT MNG_FORMALITY_FK FOREIGN KEY (FORMALITY_NAME) 
  REFERENCES MNG_FORMALITIES (FORMALITY_NAME)
);


CREATE TABLE MNG_LOCATIONS
(
  FACILITY       VARCHAR(5),
  GISIS_CODE     VARCHAR(4),
  LOCATION_NAME  VARCHAR(255),
  LOCODE         VARCHAR(5) NOT NULL,
  PORT_NAME      VARCHAR(255),
  UN_LOCODE      VARCHAR(5),
  LATITUDE       double precision,
  LONGITUDE      double precision,
  PORT_COUNTRY   VARCHAR(2),
  CONSTRAINT PK_MNG_LOCATIONS PRIMARY KEY (LOCODE),
  CONSTRAINT FK_MNG_LOCATIONS_PORT_COUNTRY FOREIGN KEY (PORT_COUNTRY) REFERENCES MNG_COUNTRIES (COUNTRY_CODE)
);

CREATE TABLE MNG_MID
(
  DIGITS        VARCHAR(3)                NOT NULL,
  COUNTRY_CODE  VARCHAR(2),
  COUNTRY_NAME  VARCHAR(255),
  COUNTRY_FLAG  VARCHAR(255),
  CONSTRAINT PK_MNG_MID PRIMARY KEY (DIGITS),
  CONSTRAINT FK_MNG_MID_COUNTRY_CODE FOREIGN KEY (COUNTRY_CODE) REFERENCES MNG_COUNTRIES (COUNTRY_CODE)
);

CREATE TABLE MNG_ORGANISATIONS
(
  SID                bigint NOT NULL,
  AGENCY_NAME        VARCHAR(255),
  BUSINESS_PHONE     VARCHAR(20),
  CONTACT_EMAIL      VARCHAR(256),
  CONTACT_FAX        VARCHAR(20),
  COUNTRY_CODE       VARCHAR(2) DEFAULT 'XX' NOT NULL,
  RESTRICTION_TYPE   VARCHAR(50),
  RESTRICTION_VALUE  VARCHAR(50),
  CONSTRAINT MNG_AGENCIES_PK PRIMARY KEY (SID),
  CONSTRAINT MNG_AGENCIES_NAME_UNIQUE UNIQUE (AGENCY_NAME),
  CONSTRAINT MNG_AGENCIES_COUNTRY_CODE_FK FOREIGN KEY (COUNTRY_CODE) REFERENCES MNG_COUNTRIES (COUNTRY_CODE)
);


CREATE TABLE MNG_PERMISSION
(
  SID          bigint NOT NULL,
  NAME         VARCHAR(50)  NOT NULL,
  DESCRIPTION  VARCHAR(255),
  APPLICATION  VARCHAR(20),
  CONSTRAINT PK_PERMISSION  PRIMARY KEY  (SID)
);


CREATE TABLE MNG_PROFILES
(
  NAME         VARCHAR(50)  NOT NULL,
  DESCRIPTION  VARCHAR(255),
  CONSTRAINT PK_MNG_PROFILES PRIMARY KEY (NAME)
);


CREATE TABLE MNG_PROFILE_PERMISSIONS
(
  PROFILE_NAME    VARCHAR(50)  NOT NULL,
  PERMISSION_SID  bigint NOT NULL,
  CONSTRAINT UC_PROFILE_PERMISSION UNIQUE (PROFILE_NAME, PERMISSION_SID),
  CONSTRAINT FK_MNG_PROFILE_PERMS_PERM FOREIGN KEY (PERMISSION_SID) REFERENCES MNG_PERMISSION (SID),
  CONSTRAINT FK_MNG_PROFILE_PERM_NAME FOREIGN KEY (PROFILE_NAME) REFERENCES MNG_PROFILES (NAME)
);


CREATE TABLE MNG_REGULATIONS_PER_COUNTRY
(
  SID  bigint NOT NULL,
  COUNTRY_CODE VARCHAR(2),
  CONSTRAINT MNG_REGULATIONS_PER_COUNTRY_PK PRIMARY KEY (SID),
  CONSTRAINT MNG_REGULATION_COUNTRIES_FK FOREIGN KEY (COUNTRY_CODE) REFERENCES MNG_COUNTRIES (COUNTRY_CODE)
);

CREATE TABLE MNG_SHIPPING_COMPANIES
(
  IMO_COMPANY_ID          VARCHAR(7) NOT NULL,
  COMPANY_NAME            VARCHAR(255),
  ADDRESS_COUNTRY         VARCHAR(2),
  CONTACT_BUSINESS_PHONE  VARCHAR(20),
  CONTACT_EMAIL           VARCHAR(256),
  CONTACT_FAX             VARCHAR(20),
  CSO_FAMILY_NAME         VARCHAR(50),
  CSO_GIVEN_NAME          VARCHAR(50),
  CONSTRAINT PK_MNG_SHIPPING_COMPANIES PRIMARY KEY (IMO_COMPANY_ID),
  CONSTRAINT FK_MNG_SHPPNGCOMP_CTR_ADDR FOREIGN KEY (ADDRESS_COUNTRY) REFERENCES MNG_COUNTRIES (COUNTRY_CODE)
);

CREATE TABLE MNG_SUPPORTED_REGULATION
(
  REGULATION_SID     bigint  NOT NULL,
  SUPPORTED            boolean                NOT NULL,
  REG_PER_COUNTRY_SID  bigint               NOT NULL,
  CONSTRAINT MNG_REGULATION_PER_COUNTRY_FK FOREIGN KEY (REG_PER_COUNTRY_SID) REFERENCES MNG_REGULATIONS_PER_COUNTRY (SID),
  CONSTRAINT MNG_SUPPORTED_REGULATION_FK FOREIGN KEY (REGULATION_SID)  REFERENCES MNG_EPC_MSG_CONTENTS (SID)
);

CREATE TABLE MNG_CONTAINERS
(
  SID  bigint NOT NULL,
  CODE VARCHAR(256),  
  DESCRIPTION_EN VARCHAR(256),
  DESCRIPTION_FR VARCHAR(256),
  ACTIVE boolean,
  TEU integer,
  CONSTRAINT PK_MNG_CONTAINERS PRIMARY KEY (SID)
);

CREATE TABLE MNG_REFERENCE_DATA
(
  SID  bigint NOT NULL,
  RD_TYPE VARCHAR(256),
  CODE VARCHAR(256),  
  DESCRIPTION_EN VARCHAR(256),
  DESCRIPTION_FR VARCHAR(256),  
  ACTIVE boolean,
  CONSTRAINT PK_MNG_REFERENCE_DATA PRIMARY KEY (SID)
);

CREATE TABLE MNG_FINAL_DESTINATIONS
(
  SID bigint NOT NULL,
  DESTINATION_EN VARCHAR(256),
  DESTINATION_FR VARCHAR(256),
  CONSTRAINT PK_MNG_FINAL_DESTINATIONS PRIMARY KEY (SID)
);

CREATE TABLE MNG_ORIGINS
(
  SID bigint NOT NULL,
  NAME_EN VARCHAR(256),
  NAME_FR VARCHAR(256),
  CONSTRAINT PK_MNG_ORIGINS PRIMARY KEY (SID)
);

CREATE TABLE mng_users
(
  sid bigint NOT NULL,
  business_phone VARCHAR(20),
  contact_email VARCHAR(50),
  contact_fax VARCHAR(20),
  person_family_name VARCHAR(256),
  person_given_name VARCHAR(256),
  email_recipient boolean,
  enabled boolean,
  active_end_dt date,
  interface_type integer,
  user_locale VARCHAR(2),
  locked boolean,
  password VARCHAR(255),
  expires_on date,
  login_tries_counter integer,
  user_id VARCHAR(255),
  country_code VARCHAR(2) NOT NULL,
  organisation_sid bigint NOT NULL,
  CONSTRAINT mng_users_pkey PRIMARY KEY (sid),
  CONSTRAINT fk23jd46n2cvntf783y0jb2vcsx FOREIGN KEY (organisation_sid) REFERENCES mng_organisations (sid) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkov746o1hyqxphef648wb98vow FOREIGN KEY (country_code) REFERENCES mng_countries (country_code) MATCH SIMPLE   ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT uk_c9g6imqo5r8aou91x2ypkuqa9 UNIQUE (user_id)
);

CREATE TABLE MNG_POINTS_COSTS ( 
  SID int8 NOT NULL, 
  CARGO_TYPE varchar(255) NULL, 
  VISA_COST int4 NULL, 
  COUNTRY varchar(255) null
);
ALTER TABLE ONLY MNG_POINTS_COSTS ADD CONSTRAINT pk_points_costs PRIMARY KEY (SID);

CREATE TABLE MNG_POINTS_BALANCE ( 
  SID int8 NOT NULL, 
  ACCOUNT varchar(255) NULL, 
  AMOUNT int4 NULL 
);
ALTER TABLE ONLY MNG_POINTS_BALANCE ADD CONSTRAINT pk_points_balance PRIMARY KEY (SID);

CREATE TABLE SHIP_TYPES
(
  CODE         bigint NOT NULL,
  DESCRIPTION  VARCHAR(255),
  SHIP_TYPE    VARCHAR(255),
  CONSTRAINT PK_SHIP_TYPES   PRIMARY KEY (CODE)
);

CREATE TABLE WASTE_TYPE
(
  CODE  VARCHAR(255)  NOT NULL,
  DESCRIPTION  VARCHAR(255),
  CONSTRAINT PK_WASTE_TYPE PRIMARY KEY (CODE)
);

CREATE UNIQUE INDEX MNG_LOCATIONS_PK ON MNG_LOCATIONS (LOCODE);

CREATE TABLE MNG_AREA_LOCATIONS
(
  AREA_CODE  VARCHAR(255)  NOT NULL,
  LOCODE     VARCHAR(5)    NOT NULL,
  CONSTRAINT PK_MNG_AREA_LOCATIONS PRIMARY KEY (AREA_CODE, LOCODE),
  CONSTRAINT FK_AREA_LOCATIONS_AREA_CODE FOREIGN KEY (AREA_CODE) REFERENCES MNG_AREAS (CODE),
  CONSTRAINT FK_MNG_AREA_LOCATIONS_LOCODE FOREIGN KEY (LOCODE)  REFERENCES MNG_LOCATIONS (LOCODE)
);

CREATE TABLE MNG_ORGANISATION_PROFILES
(
  ORGANISATION_SID  bigint  NOT NULL,
  PROFILE_NAME      VARCHAR(50) NOT NULL,
  CONSTRAINT UC_ORGANISATION_PROFILE  UNIQUE (ORGANISATION_SID, PROFILE_NAME),
  CONSTRAINT FK_MNG_ORG_PROF FOREIGN KEY (ORGANISATION_SID) REFERENCES MNG_ORGANISATIONS (SID),
  CONSTRAINT FK_MNG_ORG_PROF_NAME FOREIGN KEY (PROFILE_NAME) REFERENCES MNG_PROFILES (NAME)
);

CREATE TABLE MNG_SHIPS
(
  SID                             bigint    NOT NULL,
  CALL_SIGN                       VARCHAR(9),
  COMMENTS                        VARCHAR(256),
  FLAG_STATE                      VARCHAR(2),
  GROSS_TONAGE                    double precision,
  IMO_NUMBER                      integer,
  MMSI_NUMBER                     integer,
  NET_TONAGE                      double precision,
  summer_draught double precision,
  SHIP_NAME                       VARCHAR(35),
  CERTIFICATE_OF_REGISTRY_DATE    timestamp without time zone,
  CERTIFICATE_OF_REGISTRY_NUMBER  VARCHAR(35),
  CERTIFICATE_OF_REGISTRY_PORT    VARCHAR(5),
  CSO_FAMILY_NAME                 VARCHAR(50),
  CSO_GIVEN_NAME                  VARCHAR(50),
  CSO_PHONE                       VARCHAR(50),
  CSO_EMAIL                       VARCHAR(256),
  CSO_FAX                         VARCHAR(50),
  INMARSAT                        VARCHAR(256),
  SHIP_TYPE_CODE                  integer,
  COMPANY_ID                      VARCHAR(7),
  YEAR_OF_BUILD                   timestamp without time zone,
  DEAD_WEIGHT                     bigint,
  LENGTH_OVERALL                  bigint,
  BEAM                            bigint,
  CONSTRAINT PK_MNG_SHIPS PRIMARY KEY (SID),
  CONSTRAINT UK_MNG_SHIPS UNIQUE (IMO_NUMBER),
  CONSTRAINT FK_MNG_SHIPS_COMPANY_ID FOREIGN KEY (COMPANY_ID) REFERENCES MNG_SHIPPING_COMPANIES (IMO_COMPANY_ID),
  CONSTRAINT FK_MNG_SHIPS_SHIP_TYPE_CODE FOREIGN KEY (SHIP_TYPE_CODE) REFERENCES SHIP_TYPES (CODE)
);


CREATE TABLE SHIP_CALLS
(
  SID                         bigint   NOT NULL,
  CREATED_DT                  timestamp without time zone,
  ARRIVAL_DEPARTURE           boolean DEFAULT false,
  JOURNAL_NUMBER              VARCHAR(36),
  NUMBER_OF_CREW              integer,
  NUMBER_OF_PASSENGERS        integer,
  NUMBER_OF_PERSONS_ON_BOARD  integer,
  SHIPCALL_STATUS             VARCHAR(255),
  STOWAWAYS                   boolean DEFAULT false,
  REPORTED_CALL_SIGN          VARCHAR(9),
  REPORTED_IMO_NUMBER         VARCHAR(7),
  REPORTED_MMSI_NUMBER        VARCHAR(9),
  REPORTED_SHIP_NAME          VARCHAR(35),
  SHIP_SID                    bigint,
  PREVIOUS_SHIP_CALL_SID      bigint,
  CLEARANCE_STATUS            VARCHAR(255) DEFAULT 'Pending' NOT NULL,
  UPDATED_DT                  timestamp without time zone DEFAULT NULL,
  CONSTRAINT PK_SHIP_CALLS PRIMARY KEY (SID),
  CONSTRAINT UK_SHIP_CALLS UNIQUE (JOURNAL_NUMBER),
  CONSTRAINT FK_SHIPCALLS_PREV_SID FOREIGN KEY (PREVIOUS_SHIP_CALL_SID) REFERENCES SHIP_CALLS (SID),
  CONSTRAINT FK_SHIP_CALLS_SHIP FOREIGN KEY (SHIP_SID) REFERENCES MNG_SHIPS (SID)
);

CREATE TABLE SHIP_CALLS_HISTORY
(
  SID              bigint  NOT NULL,
  SHIP_CALLS_SID   bigint,
  USER_ID          VARCHAR(50),
  DATA_GROUP       VARCHAR(62),
  ORIGINATOR       boolean,
  SHIP_MESSAGE_ID  VARCHAR(256),
  CREATED_ON       timestamp without time zone NOT NULL,
  CONSTRAINT SHIPCALL_HISTORY_PK PRIMARY KEY (SID),
  CONSTRAINT FK_SHIPCALL_HISTORY_SHIPCALL FOREIGN KEY (SHIP_CALLS_SID) REFERENCES SHIP_CALLS (SID),
  CONSTRAINT FK_SHIPCALL_HISTORY_USER  FOREIGN KEY (USER_ID) REFERENCES MNG_USERS (USER_ID)
);

CREATE TABLE SHIP_PARTICULARS
(
  SID                             bigint    NOT NULL,
  SHIP_CALLS_SID                  bigint    NOT NULL,
  FLAG_STATE                      VARCHAR(2),
  MNG_IMO_COMPANY_ID              VARCHAR(255),
  COMPANY_NAME                    VARCHAR(70),
  SHIP_TYPE_CODE                  VARCHAR(50),
  GROSS_TONAGE                    double precision,
  NET_TONAGE                      double precision,
  CERTIFICATE_OF_REGISTRY_DATE    timestamp without time zone,
  CERTIFICATE_OF_REGISTRY_NUMBER  VARCHAR(35),
  CERTIFICATE_OF_REGISTRY_PORT    VARCHAR(5),
  COMMENTS                        VARCHAR(256),
  YEAR_OF_BUILD                   timestamp without time zone,
  DEAD_WEIGHT                     double precision,
  LENGTH_OVERALL                  double precision,
  SUMMER_DRAUGHT                  double precision,
  BEAM                            double precision,
  business_phone VARCHAR(20),
  contact_email VARCHAR(50),
  contact_fax VARCHAR(20),
  person_family_name VARCHAR(256),
  person_given_name VARCHAR(256),
  CSO_PHONE                       VARCHAR(50),
  CSO_FAX                         VARCHAR(50),
  CSO_EMAIL                       VARCHAR(50),
  CONSTRAINT PK_SHIP_PARTICULARS PRIMARY KEY (SID),
  CONSTRAINT FK_SHIP_PARTICULARS FOREIGN KEY (SHIP_CALLS_SID) REFERENCES SHIP_CALLS (SID)
);

CREATE TABLE SHIP_STORES
(
  SHIP_STORE_DESCRIPTION  VARCHAR(35),
  OFFICIAL_USE            VARCHAR(256),
  ON_BOARD_LOCATION       VARCHAR(256),
  MEASURE_CONTENT         double precision,
  MEASURE_UNIT            VARCHAR(255),
  SHIP_CALLS_SID          bigint   NOT NULL,
  CONSTRAINT FK_SHIP_STORES_SHIP_CALL_SID FOREIGN KEY (SHIP_CALLS_SID) REFERENCES SHIP_CALLS (SID)
);


CREATE TABLE WASTE
(
  SID                           bigint      NOT NULL,
  ACCURATE_AND_CORRECT_DETAILS  boolean       DEFAULT false,
  LAST_PORT_DELIVERED_DATE      timestamp without time zone,
  SUFFICIENT_ON_BOARD_CAPACITY  boolean      DEFAULT false,
  WASTE_DELIVERY_STATUS         VARCHAR(255),
  LAST_PORT_DELIVERED           VARCHAR(5),
  SHIP_CALLS_SID                bigint      NOT NULL,
  CONSTRAINT PK_WASTE PRIMARY KEY (SID),
  CONSTRAINT FK_WASTE_LAST_PORT_DELIVERED FOREIGN KEY (LAST_PORT_DELIVERED) REFERENCES MNG_LOCATIONS (LOCODE),
  CONSTRAINT FK_WASTE_SHIP_CALL_SID FOREIGN KEY (SHIP_CALLS_SID) REFERENCES SHIP_CALLS (SID)
);


CREATE TABLE WASTE_DELIVERY_RECEIPT
(
  SID                          bigint,
  LOCATION_OR_TERMINAL_NAME    VARCHAR(256) NOT NULL,
  RECEPTION_FACILITY_PROVIDER  VARCHAR(256) NOT NULL,
  TREATMENT_FACILITY_PROVIDER  VARCHAR(256),
  WASTE_DISCHARGE_FROM         timestamp without time zone,
  WASTE_DISCHARGE_TO           timestamp without time zone,
  CONSTRAINT WASTE_RECEIPT_PK PRIMARY KEY (SID),
  CONSTRAINT WASTE_RECEIPT_SHIP_CALL_FK FOREIGN KEY (SID) REFERENCES SHIP_CALLS (SID)
);

CREATE TABLE WASTE_DISPOSALS
(
  ESTIMATE_GENERATED          double precision,
  MAX_STORAGE                 double precision,
  RETAINED_ON_BOARD           double precision,
  TO_BE_DELIVERED             double precision,
  REMAIN_WASTE_DELIVERY_PORT  VARCHAR(5),
  WASTE_TYPE_CODE             VARCHAR(255),
  WASTE_SID                   bigint  NOT NULL,
  WASTE_TYPE_DESCRIPTION      VARCHAR(256),
  CONSTRAINT FK_WASTE_DISPOSALS_WASTE_SID FOREIGN KEY (WASTE_SID) REFERENCES WASTE (SID)
);

CREATE TABLE WASTE_RECEIVED
(
  WASTE_DELIVERY_RECEIPT_SID  bigint        NOT NULL,
  WASTE_TYPE_CODE             VARCHAR(256),
  WASTE_TYPE_DESCRIPTION      VARCHAR(256),
  QUANTITY_RECEIVED           double precision,
  CONSTRAINT WASTE_DELIVERY_RECEIPT_FK FOREIGN KEY (WASTE_DELIVERY_RECEIPT_SID) REFERENCES WASTE_DELIVERY_RECEIPT (SID),
  CONSTRAINT WASTE_TYPE_RECEIPT_FK FOREIGN KEY (WASTE_TYPE_CODE) REFERENCES WASTE_TYPE (CODE)
);

CREATE TABLE ATTACHMENTS
(
  SID            bigint   NOT NULL,
  SHIP_CALL_SID  bigint   NOT NULL,
  TYPE_SID       bigint   NOT NULL,
  NAME           VARCHAR(255) NOT NULL,
  CONTENT        oid      NOT NULL,
  CONSTRAINT ATTACHMENTS_PK PRIMARY KEY (SID),
  CONSTRAINT ATTACHMENTS_UK UNIQUE (SHIP_CALL_SID, TYPE_SID),
  CONSTRAINT ATTACHMENTS_ATT_FK  FOREIGN KEY (TYPE_SID) REFERENCES MNG_ATTACHMENT_TYPES (SID),
  CONSTRAINT ATTACHMENTS_SCID_FK FOREIGN KEY (SHIP_CALL_SID) REFERENCES SHIP_CALLS (SID)
);


CREATE TABLE BUNKERS_REMAINING_ONBOARD
(
  SID                             bigint,
  QUANTITY_OF_HEAVY_FUEL_OIL      double precision,
  QUANTITY_OF_GAS_OIL             double precision,
  QUANTITY_OF_MARINE_GAS_OIL      double precision,
  QUANTITY_OF_MARINE_DIESEL_OIL   double precision,
  QUANTITY_OF_ANY_OTHER_TYPE_OIL  double precision,
  BUNKER_DELIVERY_RECEIPT         boolean,
  CONSTRAINT BUNKERS_REMAINING_ONBOARD_FK FOREIGN KEY (SID) REFERENCES SHIP_CALLS (SID)
);

CREATE TABLE CIVIL_LIABILITY_CERTS
(
  SHIP_CALLS_SID  bigint,
  STATUS          VARCHAR(10),
  EXPIRY_DATA     timestamp without time zone,
  COMMENTS        VARCHAR(256),
  CONSTRAINT CERTS_SHIP_CALLS_FK FOREIGN KEY (SHIP_CALLS_SID) REFERENCES SHIP_CALLS (SID)
);


CREATE TABLE CIVIL_LIABILITY_CERTS_BUNKERS
(
  SHIP_CALLS_SID  bigint,
  STATUS          VARCHAR(10),
  EXPIRY_DATA     timestamp without time zone,
  COMMENTS        VARCHAR(256),
  CONSTRAINT CERTS_BUNKERS_SHIP_CALLS_FK FOREIGN KEY (SHIP_CALLS_SID) REFERENCES SHIP_CALLS (SID)
);

CREATE TABLE CREW
(
  SID                       bigint NOT NULL,
  DATE_OF_BIRTH             timestamp without time zone,
  PERSON_FAMILY_NAME        VARCHAR(256),
  PERSON_GIVEN_NAME         VARCHAR(256),
  PLACE_OF_BIRTH            VARCHAR(256),
  VISA_NUMBER               VARCHAR(256),
  IDENTITY_DOCUMENT_NATURE  VARCHAR(17),
  IDENTITY_DOCUMENT_NUMBER  VARCHAR(35),
  NATIONALITY_ID            VARCHAR(2),
  DUTY_CODE                 VARCHAR(21),
  SHIP_CALL_SID             bigint         NOT NULL,
  BUSINESS_PHONE            VARCHAR(20),
  CONTACT_EMAIL             VARCHAR(256),
  CONTACT_FAX               VARCHAR(20),
  CREW_REFERENCE_NUMBER     VARCHAR(20),
  USER_SID                  bigint,
  COUNTRY_OF_BIRTH          VARCHAR(2),
  CONSTRAINT PK_CREW PRIMARY KEY(SID),
  CONSTRAINT CREW_BIRTH_COUNTRY_FK  FOREIGN KEY (COUNTRY_OF_BIRTH) REFERENCES MNG_COUNTRIES (COUNTRY_CODE),
  CONSTRAINT FK_CREW_CREW_DUTY_ID FOREIGN KEY (DUTY_CODE) REFERENCES CREW_DUTIES (CODE),
  CONSTRAINT FK_CREW_NATIONALITY_ID FOREIGN KEY (NATIONALITY_ID)  REFERENCES MNG_COUNTRIES (COUNTRY_CODE),
  CONSTRAINT FK_CREW_SHIP_CALL_SID FOREIGN KEY (SHIP_CALL_SID) REFERENCES SHIP_CALLS (SID)
);


CREATE TABLE CREW_EFFECTS
(
  DESCRIPTION  VARCHAR(255),
  CREW_SID     bigint           NOT NULL,
  SEQ_NUMBER   VARCHAR(20)                NOT NULL,
  USER_SID     bigint,
  CONSTRAINT FK_CREW_EFFECTS_CREW_SID FOREIGN KEY (CREW_SID) REFERENCES CREW (SID)
);

CREATE TABLE consignments
(
  sid bigint NOT NULL,
  additional_info VARCHAR(255),
  declarant_id_number VARCHAR(17),
  identification_of_warehouse VARCHAR(35),
  location_goods_examined VARCHAR(255),
  mrn_proof_union_sys VARCHAR(255),
  authorisation_number VARCHAR(255),
  requested_valid_proof integer,
  representative_id_number VARCHAR(17),
  representative_status_code integer,
  supervising_customs_office VARCHAR(255),
  dest_country VARCHAR(255),
  dest_office VARCHAR(255),
  decl_type VARCHAR(255),
  ucr VARCHAR(35),
  total_packages integer,
  transp_doc_id VARCHAR(255),
  transp_doc_type VARCHAR(255),
  port_of_discharge VARCHAR(5),
  port_of_loading VARCHAR(5),  
  ship_calls_sid bigint NOT NULL,
  loading_country VARCHAR(256),
  bl_number VARCHAR(256),
  incoterm_descr VARCHAR(256),
  fr_payment VARCHAR(256),
  discharging_country VARCHAR(2),
  origin_country VARCHAR(2),
  tot_cars integer,
  tot_containers integer,
  tot_general double precision,
  tot_ocn_freight double precision,
  tot_add_charges double precision,
  tot_gds_values double precision,
  final_destination VARCHAR(35),
  currency VARCHAR(5),
  subject VARCHAR(256),
  remarks VARCHAR(256),
  modified_date timestamp without time zone,
  modified_by VARCHAR(256),
  CONSTRAINT consignments_pkey PRIMARY KEY (sid),
  CONSTRAINT fk_dischargecountry FOREIGN KEY (discharging_country)  REFERENCES mng_countries (country_code) MATCH SIMPLE  ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_loadcountry FOREIGN KEY (loading_country) REFERENCES mng_countries (country_code) MATCH SIMPLE  ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fk_origincountry FOREIGN KEY (origin_country) REFERENCES mng_countries (country_code) MATCH SIMPLE   ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkaryjqlfqawtvop2k06jqphj4f FOREIGN KEY (ship_calls_sid) REFERENCES ship_calls (sid) MATCH SIMPLE   ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkeyb3hj18m107cmhw53mi6dnq0 FOREIGN KEY (port_of_loading)  REFERENCES mng_locations (locode) MATCH SIMPLE  ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fko8s7dlsuu5n35531qupsoqtpu FOREIGN KEY (port_of_discharge)  REFERENCES mng_locations (locode) MATCH SIMPLE  ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE CUSTOMS_ARRIVAL_NOTIF_DETAILS
(
  SID                           bigint      NOT NULL,
  SHIP_CALLS_SID                bigint      NOT NULL,
  DECLARANT_ID_NUMBER           VARCHAR(17),
  ARRIVAL_FIRST_CUSTOMS_OFFICE  VARCHAR(8),
  TRANSPORT_MODE_AT_BORDER      VARCHAR(1),
  CONSTRAINT PK_CA_NOTIF_DETAILS PRIMARY KEY (SID),
  CONSTRAINT FK_CA_SHIPCALLS_SID FOREIGN KEY (SHIP_CALLS_SID) REFERENCES SHIP_CALLS (SID)
);


CREATE TABLE CUSTOMS_ARRIVAL_REF_TO_ENS
(
  CSTMS_ARRIVAL_NOTIF_SID    bigint         NOT NULL,
  DECL_FIRST_CUSTOMS_OFFICE  VARCHAR(8),
  MRN                        VARCHAR(35),
  DECLARED_ETA               timestamp without time zone,
  CONSTRAINT FK_CA_NOTIF_SID  FOREIGN KEY (CSTMS_ARRIVAL_NOTIF_SID) REFERENCES CUSTOMS_ARRIVAL_NOTIF_DETAILS (SID)
);

CREATE TABLE DPG
(
  SID                   bigint NOT NULL,
  CONFIRM_DPG_ON_BOARD  boolean               DEFAULT false,
  INF_SHIP_CLASS        VARCHAR(4),
  CD_URI                VARCHAR(256),
  CD_FAMILY_NAME        VARCHAR(50),
  CD_GIVEN_NAME         VARCHAR(50),
  CD_PHONE              VARCHAR(50),
  CD_EMAIL              VARCHAR(256),
  CD_FAX                VARCHAR(50),
  CD_LOCODE             VARCHAR(5),
  SHIP_CALLS_SID        bigint              NOT NULL,
  CONSTRAINT PK_DPG PRIMARY KEY (SID),
  CONSTRAINT FK_DPG_CD_LOCODE FOREIGN KEY (CD_LOCODE) REFERENCES MNG_LOCATIONS (LOCODE),
  CONSTRAINT FK_DPG_SHIP_CALL_SID  FOREIGN KEY (SHIP_CALLS_SID) REFERENCES SHIP_CALLS (SID)
);

CREATE TABLE EPC_CLEARANCE_STATUS
(
  SHIP_CALLS_SID              bigint      NOT NULL,
  AUTHORITY                   VARCHAR(256),
  DATA_GROUP                  VARCHAR(255),
  USES_SW                     boolean,
  REQUEST_STATUS              VARCHAR(20),
  COMMENTS                    VARCHAR(256),
  CREATED_DT                  timestamp without time zone,
  CLEARANCE_STATUS_AUTHORITY  VARCHAR(20),
  AGENT_SID                   bigint,
  CONSTRAINT CLEARANCE_AGENT_FK  FOREIGN KEY (AGENT_SID) REFERENCES MNG_ORGANISATIONS (SID),
  CONSTRAINT FK_EPC_CLEA_SHIP_CALL FOREIGN KEY (SHIP_CALLS_SID) REFERENCES SHIP_CALLS (SID)
);


CREATE TABLE EPC_NOT_MESSAGES
(
  SID                 bigint     NOT NULL,
  MESSAGE_TYPE        VARCHAR(50),
  JOURNAL_NUMBER      VARCHAR(36),
  REPLY_URI           VARCHAR(256),
  REPORTING_SYSTEM    VARCHAR(50),
  REQUEST_ERROR_CODE  integer,
  REQUEST_PROCESSED   boolean    DEFAULT false,
  SENT_DT             timestamp without time zone  NOT NULL,
  SHIP_MESSAGE_ID     VARCHAR(256),
  VERSION             VARCHAR(10),
  XML_CONTENT         TEXT,
  USER_SID            bigint,
  SHIP_CALL_SID       bigint,
  SENDER_CREW_DUTY    VARCHAR(21),
  PROTOCOL            VARCHAR(4) DEFAULT 'SOAP' NOT NULL,
  PRIMARY KEY (SID),
  CONSTRAINT FK_EPCNOT_SENDER_CREW_DUTY FOREIGN KEY (SENDER_CREW_DUTY) REFERENCES CREW_DUTIES (CODE),
  CONSTRAINT FK_EPC_NOTSHIP_CALL_SID FOREIGN KEY (SHIP_CALL_SID)  REFERENCES SHIP_CALLS (SID),
  CONSTRAINT FK_EPC_NOT_MESSAGES_USER_SID FOREIGN KEY (USER_SID) REFERENCES MNG_USERS (SID)
);

CREATE TABLE HEALTH
(
  SID                             bigint    NOT NULL,
  DISEASE_ON_BOARD                boolean     DEFAULT false,
  SANITARY_MEASURE_DT             timestamp without time zone,
  ILL_PERSONS_GREATER             boolean     DEFAULT false,
  ILL_PERSONS_NOW                 boolean     DEFAULT false,
  INFECTION_CONDITION_ON_BOARD    boolean     DEFAULT false,
  ISSUE_DT                        timestamp without time zone,
  LOCATION_STOWAWAYS_JOINED_SHIP  VARCHAR(255),
  MEDICAL_CONSULTED               boolean     DEFAULT false,
  NUMBER_OF_DEATHS                integer,
  NUMBER_OF_ILL_PERSONS           integer,
  ANY_PERSON_DIED                 boolean     DEFAULT false,
  SANITARY_MEASURE_PLACE          VARCHAR(256),
  RE_INSPECTION_REQUIRED          boolean     DEFAULT false,
  SANITARY_MEASURE                boolean     DEFAULT false,
  SICK_ANIMAL                     boolean     DEFAULT false,
  SANITARY_MEASURE_TYPE           VARCHAR(255),
  VALID_SCE_CC                    boolean     DEFAULT false,
  VISITED_INFECTED_AREA           boolean     DEFAULT false,
  ISSUE_LOCODE                    VARCHAR(5),
  SHIP_CALL_SID                   bigint    NOT NULL,
  CONSTRAINT PK_HEALTH PRIMARY KEY (SID),
  CONSTRAINT FK_HEALTH_ISSUE_LOCODE  FOREIGN KEY (ISSUE_LOCODE) REFERENCES MNG_LOCATIONS (LOCODE),
  CONSTRAINT FK_HEALTH_SHIP_CALL_SID FOREIGN KEY (SHIP_CALL_SID) REFERENCES SHIP_CALLS (SID)
);


CREATE TABLE HEALTH_INFECTED_AREAS
(
  HEALTH_SID                  bigint        NOT NULL,
  DATE_OF_CALL_INFECTED_AREA  timestamp without time zone,
  PORT_OF_CALL_INFECTED_AREA  VARCHAR(5),
  CONSTRAINT FK_PRT_DT_INF_AREA  FOREIGN KEY (PORT_OF_CALL_INFECTED_AREA) REFERENCES MNG_LOCATIONS (LOCODE),
  CONSTRAINT FK_PRT_DT_INF_HEALTH_SID FOREIGN KEY (HEALTH_SID) REFERENCES HEALTH (SID)
);


CREATE TABLE HEALTH_MDH
(
  SID                       bigint,
  CASE_DISPOSAL             VARCHAR(255),
  COMMENTS                  VARCHAR(255),
  EMBARKATION_DT            timestamp without time zone,
  GENDER                    VARCHAR(6),
  ILLNESS                   VARCHAR(256),
  LOCATION_OF_EVACUATION    VARCHAR(255),
  REPORTED_TO_PORT_MEDICAL  boolean           DEFAULT false,
  STATE                     VARCHAR(255),
  SYMPTOMS_DT               timestamp without time zone,
  TREATMENT                 VARCHAR(256),
  HEALTH_SID                bigint          NOT NULL,
  MDH_NUMBER                VARCHAR(20),
  CREW_OR_PASSENGER         boolean,
  USER_SID                  bigint,
  CONSTRAINT PK_HEALTH_MDH  PRIMARY KEY (SID),
  CONSTRAINT FK_HEALTH_MDH_HEALTH_SID  FOREIGN KEY (HEALTH_SID)  REFERENCES HEALTH (SID)
);

CREATE TABLE PASSENGERS
(
  SID                       bigint   NOT NULL,
  PASSENGER_NUMBER          VARCHAR(20),
  DATE_OF_BIRTH             timestamp without time zone,
  PERSON_FAMILY_NAME        VARCHAR(256),
  PERSON_GIVEN_NAME         VARCHAR(256),
  PLACE_OF_BIRTH            VARCHAR(256),
  TRANSIT                   boolean        DEFAULT false,
  VISA_NUMBER               VARCHAR(256),
  IDENTITY_DOCUMENT_NATURE  VARCHAR(17),
  IDENTITY_DOCUMENT_NUMBER  VARCHAR(35),
  DISEMBARKATION_PORT       VARCHAR(5),
  EMBARKATION_PORT          VARCHAR(5),
  NATIONALITY_ID            VARCHAR(2),
  SHIP_CALL_SID             bigint  NOT NULL,
  BUSINESS_PHONE            VARCHAR(20),
  CONTACT_EMAIL             VARCHAR(256),
  CONTACT_FAX               VARCHAR(20),
  USER_SID                  bigint,
  COUNTRY_OF_BIRTH          VARCHAR(2),
  PRIMARY KEY (SID),
  CONSTRAINT FK_PASSENGERS_DISEMBARKN_PORT FOREIGN KEY (DISEMBARKATION_PORT) REFERENCES MNG_LOCATIONS (LOCODE),
  CONSTRAINT FK_PASSENGERS_EMBARKATION_PORT FOREIGN KEY (EMBARKATION_PORT) REFERENCES MNG_LOCATIONS (LOCODE),
  CONSTRAINT FK_PASSENGERS_NATIONALITY_ID FOREIGN KEY (NATIONALITY_ID) REFERENCES MNG_COUNTRIES (COUNTRY_CODE),
  CONSTRAINT FK_PASSENGERS_SHIP_CALL_SID FOREIGN KEY (SHIP_CALL_SID) REFERENCES SHIP_CALLS (SID),
  CONSTRAINT PASS_BIRTH_COUNTRY_FK FOREIGN KEY (COUNTRY_OF_BIRTH) REFERENCES MNG_COUNTRIES (COUNTRY_CODE)
);


CREATE TABLE PORT_CALLS
(
  SID                           bigint      NOT NULL,
  ANCHORAGE                     boolean       DEFAULT false,
  ATA_TO_PORT_OF_CALL           timestamp without time zone,
  ATD_FROM_PORT_OF_CALL         timestamp without time zone,
  CARGO_BALLAST_TANK_CONDITION  VARCHAR(256),
  CARGO_ON_BOARD_DESC           VARCHAR(256),
  ETA_TO_PORT_OF_CALL           timestamp without time zone,
  ETA_TO_NEXT_PORT              timestamp without time zone,
  ETD_FROM_PORT_OF_CALL         timestamp without time zone,
  ETD_FROM_LAST_PORT            timestamp without time zone,
  PLANNED_OPERATIONS            VARCHAR(256),
  PLANNED_WORKS                 VARCHAR(256),
  POSITION_IN_PORT_OF_CALL      VARCHAR(50),
  POSSIBLE_ANCHORAGE            boolean       DEFAULT false,
  SECURITY_LEVEL                VARCHAR(255),
  TANKER_HULL_CONFIG            VARCHAR(10),
  CARGO_VOLUME_NATURE           VARCHAR(256),
  VOYAGE_NUMBER                 VARCHAR(36),
  LAST_PORT                     VARCHAR(5),
  NEXT_PORT                     VARCHAR(5),
  PORT_OF_CALL                  VARCHAR(5),
  SHIP_CALL_SID                 bigint     NOT NULL,
  PORT_FACILITY                 VARCHAR(4),
  AGENT_SID                     bigint,
  FORE_DRAUGHT                  double precision,
  MID_SHIP_DRAUGHT              double precision,
  AFT_DRAUGHT                   double precision,
  AIR_DRAUGHT                   double precision,
  PRIMARY KEY (SID),
  CONSTRAINT FK_PORT_CALLS_AGENT  FOREIGN KEY (AGENT_SID) REFERENCES MNG_ORGANISATIONS (SID),
  CONSTRAINT FK_PORT_CALLS_LAST_PORT FOREIGN KEY (LAST_PORT) REFERENCES MNG_LOCATIONS (LOCODE),
  CONSTRAINT FK_PORT_CALLS_NEXT_PORT FOREIGN KEY (NEXT_PORT) REFERENCES MNG_LOCATIONS (LOCODE),
  CONSTRAINT FK_PORT_CALLS_PORT_OF_CALL FOREIGN KEY (PORT_OF_CALL) REFERENCES MNG_LOCATIONS (LOCODE),
  CONSTRAINT FK_PORT_CALLS_SHIP_CALL_SID FOREIGN KEY (SHIP_CALL_SID) REFERENCES SHIP_CALLS (SID)
);

CREATE TABLE SANITARY_MEASURES
(
  HEALTH_SID              bigint,
  SANITARY_MEASURE_DT     timestamp without time zone,
  SANITARY_MEASURE_PLACE  VARCHAR(255),
  SANITARY_MEASURE_TYPE   VARCHAR(255),
  CONSTRAINT SANITARY_MEASURE_HEALTH_SID  FOREIGN KEY (HEALTH_SID) REFERENCES HEALTH (SID)
);


CREATE TABLE SECURITY
(
  SID                          bigint    NOT NULL,
  CURRENT_SHIP_SECURITY_LEVEL  VARCHAR(255),
  SECURITY_RELATED_MATTER      VARCHAR(256),
  ISSC_EXPIRY_DT               timestamp without time zone,
  ISSC_TYPE                    VARCHAR(50),
  ISCC_ISSUER_TYPE             VARCHAR(50),
  ISSC_ISSUER                  VARCHAR(256),
  REASON_FOR_NO_VALID          VARCHAR(256),
  APPROVED_SSC_ON_BOARD        boolean        DEFAULT false,
  VALID_ISSC                   boolean        DEFAULT false,
  SHIP_CALL_SID                bigint       NOT NULL,
  CSO_FAMILY_NAME              VARCHAR(50),
  CSO_GIVEN_NAME               VARCHAR(50),
  CSO_PHONE                    VARCHAR(20),
  CSO_EMAIL                    VARCHAR(256),
  CSO_FAX                      VARCHAR(20),
  USER_SID                     bigint,
  PRIMARY KEY (SID) ,
  CONSTRAINT FK_SECURITY_SHIP_CALL_SID FOREIGN KEY (SHIP_CALL_SID) REFERENCES SHIP_CALLS (SID)
);

CREATE TABLE SHIP_DEFECTS
(
  SHIP_PARTICULARS_SID  bigint,
  HULL_INTEGRITY        VARCHAR(256),
  MANOEUVRABILITY       VARCHAR(256),
  MOORING               VARCHAR(256),
  CARGO_HANDLING        VARCHAR(256),
  COMMUNICATION         VARCHAR(256),
  NAVIGATION            VARCHAR(256),
  OTHER                 VARCHAR(256),
  CONSTRAINT SHIP_PARTICULARS_DEFECTS_FK FOREIGN KEY (SHIP_PARTICULARS_SID) REFERENCES SHIP_PARTICULARS (SID)
);


CREATE TABLE SHIP_TO_SHIP_ACTIVITIES
(
  ACTIVITY                      VARCHAR(255),
  ADDITIONAL_SECURITY_MEASURES  VARCHAR(255),
  FROM_DT                       timestamp without time zone,
  TO_DT                         timestamp without time zone,
  LOCODE                        VARCHAR(5),
  SECURITY_SID                  bigint NOT NULL,
  LATITUDE                      double precision,
  LONGITUDE                     double precision,
  LOCATION_NAME                 VARCHAR(256),
  CONSTRAINT FK_SHIPTOSHIP_ACTIVITIES_SID FOREIGN KEY (SECURITY_SID) REFERENCES SECURITY (SID)
);


CREATE TABLE cargo_items
(
  sid bigint NOT NULL,
  is_dpg boolean,
  cus_code VARCHAR(8),
  custom_status VARCHAR(255),
  description_of_goods VARCHAR(256),
  hs_code VARCHAR(18),
  measure_content double precision,
  measure_unit VARCHAR(255),
  seal_number VARCHAR(35),
  additional_information VARCHAR(255),
  dg_classification VARCHAR(255),
  flashpoint double precision,
  marpol_pollution_code VARCHAR(255),
  packing_group VARCHAR(255),
  textual_reference VARCHAR(255),
  imo_hazard_class VARCHAR(255),
  un_number VARCHAR(255),
  gross_quantity_value double precision,
  gross_quantity_unit VARCHAR(255),
  marks_and_number VARCHAR(17),
  net_quantity_value double precision,
  net_quantity_unit VARCHAR(255),
  number_of_packages integer,
  package_type VARCHAR(2),
  sequence_number integer,
  shipping_marks VARCHAR(255),
  stowage_position VARCHAR(255),
  consignment_sid bigint NOT NULL,
  ocean_freight double precision,
  vol_of_goods double precision,
  val_of_goods double precision,
  add_ch_thc double precision,
  add_charges double precision,
  add_ch_caf double precision,
  add_ch_baf double precision,
  add_ch_war double precision,
  roro_total integer,
  roro_class VARCHAR(500),
  roro_chassis VARCHAR(500),
  roro_type VARCHAR(500),
  roro_descr VARCHAR(500),
  cnt_type VARCHAR(500),
  cnt_number VARCHAR(500),
  cnt_total integer,
  CONSTRAINT cargo_items_pkey PRIMARY KEY (sid),
  CONSTRAINT fk2l4ny4a2omm7miqabeuhfop54 FOREIGN KEY (consignment_sid) REFERENCES consignments (sid) MATCH SIMPLE  ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE cns_add_supplychain_actors
(
  consignment_sid bigint NOT NULL,
  actor_sid bigint NOT NULL,
  CONSTRAINT fk_add_supply_actors FOREIGN KEY (actor_sid)     REFERENCES add_supplychain_actors (actor_sid) MATCH SIMPLE  ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkcgmig0bknu0gibldpf920u1j8 FOREIGN KEY (consignment_sid) REFERENCES consignments (sid) MATCH SIMPLE  ON UPDATE NO ACTION ON DELETE NO ACTION
);

CREATE TABLE ECTN_POINTS
(
  SID bigint NOT NULL,
  transaction_date timestamp without time zone,
  fwr_account VARCHAR(255),
  agent_account VARCHAR(255),
  amount integer,
  CONSTRAINT PK_ECTN_POINTS PRIMARY KEY (sid)
);

CREATE TABLE CNS_REFERENCE_TO_ENS
(
  CONSIGNMENT_SID      bigint               NOT NULL,
  MRN                  VARCHAR(35)        NOT NULL,
  FIRST_CUST_OFF_DECL  VARCHAR(8)         NOT NULL,
  CONSTRAINT FK_CONSIGNMENT_ENS_SID FOREIGN KEY (CONSIGNMENT_SID)  REFERENCES CONSIGNMENTS (SID)
);


CREATE TABLE portcall_purposes
(
  port_calls_sid bigint NOT NULL,
  code integer NOT NULL,
  CONSTRAINT fk2lgmjw83jhrqu471vn75847i8 FOREIGN KEY (code) REFERENCES call_purposes (code) MATCH SIMPLE ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT fkqyj1p8ioxr8vvxruh8qqiysg FOREIGN KEY (port_calls_sid)  REFERENCES port_calls (sid) MATCH SIMPLE  ON UPDATE NO ACTION ON DELETE NO ACTION,
  CONSTRAINT uk_niup788ccwelox3ied0xu0pti UNIQUE (code)
);

CREATE OR REPLACE VIEW user_roles_vw AS 
 SELECT DISTINCT u.user_id,
        CASE
            WHEN p.application::text = 'CRG'::text THEN 'DATA_PROVIDER'::text
            WHEN p.application::text = 'AIE'::text THEN 'AUTHORITY'::text
            WHEN p.application::text = 'RESOURCES'::text THEN 'NATIONAL_ADMIN'::text
            WHEN p.application::text = 'GI'::text THEN 'GI'::text
            ELSE NULL::text
        END AS profile_name
   FROM mng_users u
     JOIN mng_organisation_profiles op ON u.organisation_sid = op.organisation_sid
     JOIN mng_profile_permissions pp ON pp.profile_name::text = op.profile_name::text
     JOIN mng_permission p ON p.sid = pp.permission_sid;



CREATE UNIQUE INDEX PK_CONSIGNMENTS ON CONSIGNMENTS (SID);
CREATE UNIQUE INDEX PK_CA_NOTIF_DETAILS_UK ON CUSTOMS_ARRIVAL_NOTIF_DETAILS (SID);
CREATE UNIQUE INDEX MNG_LOCATIONS_PK_U ON MNG_LOCATIONS (LOCODE);
CREATE UNIQUE INDEX WASTE_RECEIPT_PK_U ON WASTE_DELIVERY_RECEIPT (SID);
CREATE UNIQUE INDEX PK_HEALTH_U ON HEALTH (SID);
CREATE UNIQUE INDEX PK_WASTE_TYPE_U ON WASTE_TYPE (CODE);
CREATE UNIQUE INDEX PK_SHIP_CALLS_U ON SHIP_CALLS (SID);
CREATE UNIQUE INDEX PK_MNG_SHIPPING_COMPANIES_U ON MNG_SHIPPING_COMPANIES (IMO_COMPANY_ID);
CREATE UNIQUE INDEX PK_APPLICATION_PARAMETERS_U ON APPLICATION_PARAMETERS (CODE);
CREATE UNIQUE INDEX MNG_ATTACHMENT_TYPES_PK_U ON MNG_ATTACHMENT_TYPES (SID);
CREATE UNIQUE INDEX PK_HEALTH_MDH_U ON HEALTH_MDH (SID);
CREATE UNIQUE INDEX PK_CALL_PURPOSES_U ON CALL_PURPOSES (CODE);
CREATE UNIQUE INDEX UK_MNG_SHIPS_U ON MNG_SHIPS (IMO_NUMBER);
CREATE UNIQUE INDEX IDX_MNG_REGULATIONS_PER_COUNTRY_PK ON MNG_REGULATIONS_PER_COUNTRY (SID);
CREATE UNIQUE INDEX IDX_PK_MNG_SHIPS ON MNG_SHIPS (SID);
CREATE UNIQUE INDEX IDX_PK_MNG_EPC_MSG_CONTENTS ON MNG_EPC_MSG_CONTENTS (SID);
CREATE UNIQUE INDEX IDX_PK_MNG_COUNTRIES ON MNG_COUNTRIES (COUNTRY_CODE);
CREATE UNIQUE INDEX IDX_PK_PORTCALL_PURPOSES ON PORTCALL_PURPOSES (PORT_CALLS_SID, CODE);
CREATE UNIQUE INDEX IDX_SHIPCALL_HISTORY_PK ON SHIP_CALLS_HISTORY (SID);
CREATE INDEX IDX_EPC_CST_SHIP_CALLS_SID ON EPC_CLEARANCE_STATUS (SHIP_CALLS_SID);
CREATE UNIQUE INDEX IDX_PK_CREW ON CREW (SID);
CREATE UNIQUE INDEX IDX_MNG_EPC_MSG_CONTENTS_UK ON MNG_EPC_MSG_CONTENTS (IMP_CODE);
CREATE UNIQUE INDEX IDX_PK_CARGO_ITEMS ON CARGO_ITEMS (SID);
CREATE INDEX IDX_SHIP_CALLS_STATUS ON SHIP_CALLS (CLEARANCE_STATUS);
CREATE UNIQUE INDEX IDX_MNG_AGENCIES_NAME_UNIQUE ON MNG_ORGANISATIONS (AGENCY_NAME);
CREATE UNIQUE INDEX IDX_PK_CREW_DUTIES ON CREW_DUTIES (CODE);
CREATE INDEX IDX_EPC_NOT_SHIPCALLSID ON EPC_NOT_MESSAGES (SHIP_CALL_SID);
CREATE UNIQUE INDEX IDX_PK_PERMISSION ON MNG_PERMISSION (SID);
CREATE UNIQUE INDEX IDX_PK_SHIP_PARTICULARS ON SHIP_PARTICULARS (SID);
CREATE INDEX IDX_PORTCALLS_SHIPCALLSID ON PORT_CALLS (SHIP_CALL_SID);
CREATE UNIQUE INDEX IDX_PK_WASTE ON WASTE (SID);
CREATE UNIQUE INDEX IDX_UK_SHIP_CALLS ON SHIP_CALLS (JOURNAL_NUMBER);
CREATE INDEX IDX_SHIP_CALLS_IMO ON SHIP_CALLS (REPORTED_IMO_NUMBER);
CREATE INDEX IDX_SHIP_CALLS_NAME ON SHIP_CALLS (REPORTED_SHIP_NAME);
CREATE UNIQUE INDEX IDX_UC_PROFILE_PERMISSION ON MNG_PROFILE_PERMISSIONS (PROFILE_NAME, PERMISSION_SID);
CREATE UNIQUE INDEX IDX_PK_SHIP_TYPES ON SHIP_TYPES (CODE);
CREATE INDEX IDX_SHIP_CALLS_CALLSIGN ON SHIP_CALLS (REPORTED_CALL_SIGN);
CREATE UNIQUE INDEX IDX_UC_ORGANISATION_PROFILE ON MNG_ORGANISATION_PROFILES (ORGANISATION_SID, PROFILE_NAME);
CREATE INDEX IDX_SHIP_CALLS_MMSI ON SHIP_CALLS (REPORTED_MMSI_NUMBER);
CREATE UNIQUE INDEX IDX_ATTACHMENTS_PK ON ATTACHMENTS (SID);
CREATE UNIQUE INDEX IDX_PK_DPG ON DPG (SID);
CREATE UNIQUE INDEX IDX_MNG_AGENCIES_PK ON MNG_ORGANISATIONS (SID);
CREATE UNIQUE INDEX IDX_MNG_FORMALITIES_PK ON MNG_FORMALITIES (FORMALITY_NAME);
CREATE INDEX IDX_EPC_DATAGROUP ON EPC_CLEARANCE_STATUS (DATA_GROUP);
CREATE UNIQUE INDEX IDX_MNG_ATTACHMENT_TYPES_UK1 ON MNG_ATTACHMENT_TYPES (TYPE_NAME);
CREATE UNIQUE INDEX IDX_ATTACHMENTS_UK ON ATTACHMENTS (SHIP_CALL_SID, TYPE_SID);

CREATE SEQUENCE seq_journal_number
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
  
  CREATE SEQUENCE seq_sid
  INCREMENT 1
  MINVALUE 1
  MAXVALUE 9223372036854775807
  START 1
  CACHE 1;
